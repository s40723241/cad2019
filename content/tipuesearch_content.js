var tipuesearch = {"pages": [{'title': 'week', 'text': 'week2-5 \n week6-9 \n week10-14 \n week15-18 \n', 'tags': '', 'url': 'week.html'}, {'title': 'WEEK2-5', 'text': 'week2 \n 建立倉儲 \n 影片: https://youtu.be/kaMfd0vBJls \n \n week3 \n 執行編譯 Solveapace \n 影片: https://youtu.be/PZDLrdlfROY \n \n \n week4 \n \n 無 \n week5 \n 練習solvespace基本操作 \n 並繪製一個元件 \n \n \n', 'tags': '', 'url': 'WEEK2-5.html'}, {'title': 'WEEK6-9', 'text': 'week6 \n 用solvespace畫一台雙輪車 \n \n \n 下載\xa0 V-rep 3.6.1 rev 4.7z \xa0及 web_vrep2.zip \xa0( local ) \n 打開 web_vrep2 裡的 app.py 並執行，進入到 http://127.0.0.1:5000/ \n 打開vrep.exe並開啟web_vrep2裡的two_wheeler.ttt車子檔案 \n 開始之後，就可以利用運用控制器的前後左右測試是否可以控制車子 \n \n week7 \n 我的Solvespace爆掉了... \n 正在極力搶修中!!! \n week8 \n 開始編輯網頁 \n \n 建立Webots並開啟 \n \n week9 \n 期 中評分 \n', 'tags': '', 'url': 'WEEK6-9.html'}, {'title': 'WEEK10-14', 'text': 'week10 \n SolidWorks公司成立於1993年12月，其總部設在 美國 麻州 康克爾郡 ，西元1995年發表其第一款產品 SolidWorks 95 ，1997年被 達梭系統 併購，SolidWorks公司現在是達梭系統的子公司。 \n \n \n week11 \n week12 \n CH9 \n 9.1.1創建空白頁 \n 創建新檔案或導入原始模型，建立胚料 \n 9.1.2設置加工環境 \n 選擇文件→\xa0新建→\xa0製造→\xa0選擇想要進行的加工模式 \n 9.1.3操作導航器 \n 有關刀具，方法和策略的信息 \n 9.1.4機器坐標系 \n 設定坐標系 \n 9.2.1創建新操作 \n 設定新的加工程序 \n 9.2.2工具創見與選擇 \n 創建刀具與設定刀具參數 \n 9.2.3工具路徑設置 \n 選擇刀具路徑的偏差量 \n 9.2.5切割深度 \n 設定每次切割的深度 \n 9.2.6切削參數 \n 設定切削參數 \n 9.2.7迴避 \n 設定起刀點及座標 \n 9.2.8速度和進給 \n 設定主軸轉速和切削速度 \n 9.3.1生成程序 \n 生成加工程序 \n 9.3.2刀具路徑顯示 \n 開啟刀去路徑顯示以檢視 \n 9.3.3刀具路徑模擬 \n 舍弟完刀具路徑後進行模擬，以避免產生撞刀之類的失誤 \n 9.3.4鑿孔檢查 \n 驗證工具是否從工件上清除了多餘的材料 \n 9.4.1粗加工 \n 粗加工以較快的速度去除散裝物料 \n 9.4.2半精加工 \n 半精加工程序旨在消除由於粗加工引起的不均勻 \n 9.4.3.1外部輪廓 \n 該程序旨在將外斜牆修整到地板的底部 \n 9.4.3.2內部輪廓 \n 觀察到切刀從未越過修整和檢查所給定的邊界 \n 9.4.4修整輪廓表面 \n 修整工件輪廓並開始加工 \n 9.5.1創建CLSF \n 生成並保存操作後，將生成的刀具路徑存儲為程序 \n 9.5.2後處理 \n 產生G碼 \n \n \n \n \n week13 \n \n week14 \n', 'tags': '', 'url': 'WEEK10-14.html'}, {'title': 'WEEK15-18', 'text': '', 'tags': '', 'url': 'WEEK15-18.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以git子模塊添加\xa0 \xa0 https://github.com/mdecourse/cmsimde \xa0 \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};